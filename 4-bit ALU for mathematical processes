module alu_4bit(output reg [7:0] out,
					 output reg ack,input[3:0]a,b,
					 input [2:0]opcode, input on);
	always@(a,b,opcode,on) begin
		ack<=1'b0;
		if(!on) out<='d0;
		else begin
			ack<=1'b1;
			case(opcode)
			3'd0: out<=a+b;
			3'd1: out<=a-b;
			3'd2: out<=a+1'b1;
			3'd3: out<=a-1'b1;
			3'd4: out<=a;
			3'd5: out<=!a;
			3'd6: out<=a|b;
			3'd7: out<=a&b;
			endcase
		end
	end
endmodule
