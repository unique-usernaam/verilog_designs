module dclk(output reg [5:0]h, output reg [6:0]m,s, 
            output reg alm, err, input set, rst, clk, alm_en, alm_stp,
            input [5:0] ho_in, input [6:0]min_in);
	reg alm_present=1'b0; 
	reg [5:0]a_ho='d0; 
	reg [6:0]a_min='d0;

	always@(posedge clk) begin //Setting and resetting block.
		err<=((set&&rst)||(set&&alm_en));
    
		if(rst) begin
			h<='d0; m<='d0; s<='d0;
			a_ho<='d0; a_min<='d0;
		end
		else if(err) begin
			h<='d0; m<='d0; s<='d0;
		end
		else if(set &&(!err)) begin
			h<=ho_in; m<=min_in; s<='d0;
		end
		else if(alm_en &&(!err)) begin
			a_ho<=ho_in; a_min<=min_in; 
			alm_present<=1'b1;
		end
	end
	
	always@(posedge clk) begin//Alarm checking block. 
		if(alm_present&&(!err))begin
			if((!alm_stp)&&(h==a_ho)&&(m==a_min)) begin
				alm<=1'b1; alm_present<=1'b0;
			end
			else if(alm_stp) alm<=1'b0;
		end
	end
	
	always@(posedge clk) begin//Clockwork.
		if(!(set||rst)) begin
			s<=s+1'b1;
			if(s=='d59) begin
				s<='d0; m<=m+1'b1;
				if(m=='d59) begin
					h<=h+1'b1; m<='d0;
					if(h=='d23) h<='d0;
				end
			end
		end
	end
endmodule
