module fsm101(output reg q_out, input in,clk,rst);
	reg [1:0] pres_state, next_state;
	parameter s0=2'b00, s1=2'b01;
	parameter s2=2'b10;
	
	always@(posedge clk) begin//Present state assign.
		if(rst) pres_state<=s0;
		else pres_state<=next_state;
	end
	
	always@(posedge clk) begin// Output for overlapping detection.
		case(pres_state)
		s0: q_out<=1'b0;
		s1: q_out<=1'b0;	
		s2: begin if(in) q_out<=1'b1;
					 else q_out<=1'b0; end
	end
	
	always@(pres_state or in) begin// Next state assignment. 
		case(pres_state)
		s0: begin
				  if(in) next_state<=s1;
				  else next_state<=s0;
			  end
		s1: begin
				  if(in) next_state<=s1;
				  else next_state<=s2;
			  end
		s2: begin
				  if(in) next_state<=s1;
				  else next_state<=s0;
			  end
		endcase
	end
endmodule
